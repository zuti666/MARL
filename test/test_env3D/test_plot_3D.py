# -*- coding: utf-8 -*-

"""
@author     : zuti
@software   : PyCharm
@file       : test figure.py
@time       : 2023/3/7 16:53
@desc       ：

绘制三维下 红蓝双方飞机对峙状态

"""
import numpy as np
from matplotlib import pyplot as plt

def Rot_mat(pitch,yaw,roll):# 计算旋转矩阵
    # 先z方向: 偏航角
    Rz = np.array([[np.cos(yaw), -np.sin(yaw), 0],
                   [np.sin(yaw), np.cos(yaw), 0],
                   [0, 0, 1]])
    # 再y方向：俯仰角
    Ry = np.array([[np.cos(pitch), 0, np.sin(pitch)],
                   [0, 1, 0],
                   [- np.sin(pitch), 0, np.cos(pitch)]])
    # 最后x方向：滚转角
    Rx = np.array([[1, 0, 0],
                   [0, np.cos(roll), -np.sin(roll)],
                   [0, np.sin(roll), np.cos(roll)]])

    # 直角坐标系到机体坐标系的旋转矩阵
    RMat_t2b = np.matmul(np.matmul(Rx,Ry),Rz) #矩阵相乘
    RMat_b2t = np.linalg.inv(RMat_t2b)
    return RMat_b2t

    # 148*3 三角连接矩阵




TR = np.array(
    [[1, 50, 41], [1, 51, 50], [2, 51, 1], [3, 51, 2], [3, 53, 51], [3, 43, 53], [3, 4, 43], [4, 3, 52], [5, 4, 52],
     [5, 47, 4], [5, 49, 47], [6, 49, 5], [6, 54, 49], [7, 54, 6], [8, 54, 7], [9, 54, 8], [9, 16, 54], [9, 10, 16],
     [10, 9, 28], [11, 10, 28], [11, 14, 10], [11, 13, 14], [12, 13, 11], [13, 12, 24], [13, 24, 14], [14, 24, 20],
     [15, 14, 20], [15, 10, 14], [16, 10, 15], [15, 48, 16], [17, 48, 15], [17, 37, 48], [17, 36, 37], [18, 36, 17],
     [18, 8, 36], [19, 8, 18], [9, 8, 19], [9, 19, 28], [19, 55, 28], [19, 35, 55], [19, 18, 35], [18, 20, 35],
     [18, 17, 20], [17, 15, 20], [20, 24, 35], [21, 35, 24], [22, 35, 21], [22, 34, 35], [22, 28, 34], [22, 29, 28],
     [22, 23, 29], [23, 22, 21], [23, 21, 56], [21, 33, 56], [21, 24, 33], [24, 25, 33], [12, 25, 24], [25, 12, 11],
     [25, 11, 26], [26, 32, 25], [26, 27, 32], [27, 26, 30], [26, 29, 30], [11, 29, 26], [28, 29, 11], [29, 23, 30],
     [30, 23, 56], [27, 30, 56], [31, 27, 56], [32, 27, 31], [33, 32, 31], [25, 32, 33], [33, 31, 56], [34, 28, 55],
     [35, 34, 55], [36, 8, 7], [36, 7, 38], [37, 36, 38], [38, 46, 37], [38, 39, 46], [39, 38, 7], [40, 39, 7],
     [39, 40, 1], [1, 45, 39], [1, 41, 45], [41, 42, 45], [42, 41, 43], [43, 4, 42], [42, 4, 44], [42, 44, 45],
     [44, 47, 45], [4, 47, 44], [45, 47, 46], [45, 46, 39], [46, 47, 37], [37, 47, 48], [47, 49, 48], [48, 49, 16],
     [49, 54, 16], [41, 50, 43], [50, 53, 43], [51, 53, 50], [1, 40, 2], [2, 40, 3], [3, 40, 52], [52, 40, 7],
     [6, 52, 7], [6, 5, 52], [57, 60, 59], [57, 58, 60], [58, 57, 61], [57, 62, 61], [57, 59, 62], [59, 58, 62],
     [60, 58, 59], [61, 62, 58], [63, 64, 66], [64, 63, 68], [64, 68, 67], [65, 64, 67], [66, 64, 65], [63, 66, 65],
     [63, 65, 67], [67, 68, 63], [69, 71, 73], [70, 71, 69], [71, 70, 74], [70, 73, 74], [70, 69, 73], [72, 74, 73],
     [72, 71, 74], [71, 72, 73], [75, 76, 79], [76, 75, 77], [77, 75, 80], [75, 79, 80], [78, 80, 79], [78, 76, 80],
     [76, 78, 79], [76, 77, 80], [81, 82, 85], [82, 81, 83], [83, 81, 86], [81, 85, 86], [84, 86, 85], [84, 82, 86],
     [82, 84, 85], [82, 83, 86]])
X = np.array([[0.4, 0.025, -0.0433012701892219], [0.4, 0.05, 0], [0.4, 0.025, 0.0433012701892219],
              [0.4, -0.025, 0.0433012701892219], [0.3, -0.035, 0.0606217782649107],
              [0.2, 0.035, 0.0606217782649107], [0.2, 0.07, 0], [0, 0.065, 0], [-0.1, 0.03, 0.0519615242270663],
              [-0.1, -0.03, 0.0519615242270663], [-0.2, -0.025, 0.0433012701892219], [-0.3, -0.04, 0],
              [-0.2, -0.05, 0], [-0.1, -0.06, 0], [0, -0.065, 0], [0, -0.0325, 0.0562916512459885],
              [0, -0.0325, -0.0562916512459885], [-0.1, 0.03, -0.0519615242270663], [-0.1, 0.06, 0],
              [-0.1, -0.03, -0.0519615242270663], [-0.4, 0.015, -0.0259807621135332], [-0.4, 0.03, 0],
              [-0.5, 0.02, 0], [-0.2, -0.025, -0.0433012701892219], [-0.4, -0.03, 0],
              [-0.4, -0.015, 0.0259807621135332], [-0.5, -0.01, 0.0173205080756888],
              [-0.2, 0.025, 0.0433012701892219], [-0.4, 0.015, 0.0259807621135332],
              [-0.5, 0.01, 0.0173205080756888], [-0.5, -0.01, -0.0173205080756888], [-0.5, -0.02, 0],
              [-0.4, -0.015, -0.0259807621135332], [-0.3, 0.04, 0], [-0.2, 0.025, -0.0433012701892219],
              [0, 0.0325, -0.0562916512459885], [0.2, -0.035, -0.0606217782649107],
              [0.2, 0.035, -0.0606217782649107], [0.3, 0.035, -0.0606217782649107], [0.3, 0.07, 0],
              [0.5, -0.01, -0.0173205080756888], [0.5, -0.02, 0], [0.5, -0.01, 0.0173205080756888], [0.4, -0.05, 0],
              [0.4, -0.025, -0.0433012701892219], [0.3, -0.035, -0.0606217782649107], [0.3, -0.07, 0],
              [0.2, -0.07, 0], [0.2, -0.035, 0.0606217782649107], [0.5, 0.01, -0.0173205080756888], [0.5, 0.02, 0],
              [0.3, 0.035, 0.0606217782649107], [0.5, 0.01, 0.0173205080756888], [0, 0.0325, 0.0562916512459885],
              [-0.2, 0.05, 0], [-0.5, 0.01, -0.0173205080756888], [0.2, 0.0657784834550136, 0.0239414100327968],
              [0, 0.0562916512459885, -0.0325], [0.05, 0.5, 0], [0.2, 0.07, -0],
              [0, 0.061080020351084, 0.0222313093161685], [-0.05, 0.5, 0], [0, -0.0562916512459885, -0.0325],
              [0.2, -0.0657784834550136, 0.0239414100327968], [0.05, -0.5, 0], [0.2, -0.07, -0], [-0.05, -0.5, 0],
              [0, -0.061080020351084, 0.0222313093161685], [-0.45, 0.2, 0], [-0.4, 0.0259807621135332, 0.015],
              [-0.4, 0.0259807621135332, -0.015], [-0.5, 0.0173205080756888, -0.01], [-0.5, 0.2, 0],
              [-0.5, 0.0173205080756888, 0.01], [-0.4, -0.0259807621135332, 0.015],
              [-0.4, -0.0259807621135332, -0.015], [-0.45, -0.2, 0], [-0.5, -0.0173205080756888, -0.01],
              [-0.5, -0.0173205080756888, 0.01], [-0.5, -0.2, 0], [-0.4, 0.012678547852221, 0.0271892336110995],
              [-0.4, -0.012678547852221, 0.0271892336110995], [-0.45, 0, 0.15],
              [-0.5, -0.00845236523481399, 0.018126155740733], [-0.5, 0.00845236523481399, 0.018126155740733],
              [-0.5, 0, 0.15]])
scale = 1000
X = scale * X

fig = plt.figure()


# #起点
# pos_ally0_begin = [0,0,10200]
# pos_ally1_begin = [0,500,10200]
# pos_oppo0_begin = [1200,0,10200]
# pos_oppo1_begin = [1200,500,10200]
#
# #终点
# pos_ally0_begin = [0, 6786,9452]
# pos_ally1_begin = [0,0,10200]
# pos_oppo0_begin = [0,0,10200]
# pos_oppo1_begin = [0,0,10200]




#绘制点
# ax1.plot(0,0,10000, color='red', label="R001", marker="*")
# ax1.plot(0,5000,10200, color='red', label="R002", marker="*")
# ax1.plot(12000,0,10000, color='blue', label="B001", marker="*")
# ax1.plot(12000,5000,10200, color='blue', label="b002", marker="*")


#绘制飞机
ax1 = fig.add_subplot(projection='3d')
#绘制边界
ax1.plot(-10000,-10000,-10, color='black', label="b002", marker="o")
ax1.plot(20000,20000,20000, color='black', label="b002", marker="o")


position_plane_0=[0,0,8600]
pose_plane_0 = [0,0,0]
RMat_b2t0=Rot_mat(pose_plane_0[0], pose_plane_0[1], pose_plane_0[2])
X0=np.matmul(RMat_b2t0,X.T).T+ position_plane_0
ax1.set_title('pi/4')
ax1.plot_trisurf(X0[:, 0], X0[:, 1], X0[:, 2], triangles=TR - 1, color='red', edgecolor='red', linewidth=0.3,
            antialiased=True)


# ax2 = fig.add_subplot(222,projection='3d')
# #绘制边界
# ax1.plot(-10,-10,-10, color='black', label="b002", marker="o")
# ax1.plot(20,20,20, color='black', label="b002", marker="o")
position_plane_1=[0,1500,8000]
pose_plane_1 = [0,np.pi,0]
RMat_b2t0=Rot_mat(pose_plane_1[0], pose_plane_1[1], pose_plane_1[2])
X0=np.matmul(RMat_b2t0,X.T).T+ position_plane_1
# ax2.set_title('pi/2')
ax1.plot_trisurf(X0[:, 0], X0[:, 1], X0[:, 2], triangles=TR - 1, color='red', edgecolor='red', linewidth=0.3,
            antialiased=True)

# ax3 = fig.add_subplot(223,projection='3d')
position_oppo_0=[11000,0,8200]
pose_oppo_0 = [0,np.pi,0]
RMat_b2t0=Rot_mat(pose_oppo_0[0], pose_oppo_0[1], pose_oppo_0[2])
X0=np.matmul(RMat_b2t0,X.T).T+ position_oppo_0
# ax3.set_title('pi')
# ax3.plot(-10,-10,-10, color='black', label="b002", marker="o")
# ax3.plot(20,20,20, color='black', label="b002", marker="o")
ax1.plot_trisurf(X0[:, 0], X0[:, 1], X0[:, 2], triangles=TR - 1, color='blue', edgecolor='blue', linewidth=0.3,
            antialiased=True)

#
# ax4 = fig.add_subplot(224,projection='3d')
position_oppo_1=[11000,5000,8000]
pose_oppo_1 = [0,np.pi,0]
RMat_b2t0=Rot_mat(pose_oppo_1[0], pose_oppo_1[1], pose_oppo_1[2])
X1=np.matmul(RMat_b2t0,X.T).T+ position_oppo_1
# ax4.set_title('-pi')
# ax4.plot(-10,-10,-10, color='black', label="b002", marker="o")
# ax4.plot(20,20,20, color='black', label="b002", marker="o")
ax1.plot_trisurf(X1[:, 0], X1[:, 1], X1[:, 2], triangles=TR - 1, color='blue', edgecolor='blue', linewidth=0.5,
            antialiased=True)
#
# #
# position_2=[12000,0,10000]
# pose_2 = [np.pi,0,0]
# RMat_b2t0=Rot_mat(pose_2[0], pose_2[1], pose_2[2])
# X2=np.matmul(RMat_b2t0,X.T).T+ position_2
# ax1.plot_trisurf(X2[:, 0], X2[:, 1], X2[:, 2], triangles=TR - 1, color='blue', edgecolor='blue', linewidth=0.5,
#             antialiased=True)
# #
# #
# position_3=[12000,5000,10200]
# pose_3 = [-np.pi,0,0]
# RMat_b2t0=Rot_mat(pose_3[0], pose_3[1], pose_3[2])
# X3=np.matmul(RMat_b2t0,X.T).T+ position_3
# ax1.plot_trisurf(X3[:, 0], X3[:, 1], X3[:, 2], triangles=TR - 1, color='blue', edgecolor='blue', linewidth=0.5,
#             antialiased=True)


plt.ticklabel_format(style='plain')

# ax2 = fig.add_subplot(212)
# ax2.plot(2,0)

plt.show()
plt.savefig('test.png')
plt.close()

